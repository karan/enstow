services:
  # Test Database Containers
  mariadb-test-e2e:
    image: mariadb:10.6
    container_name: mariadb-test-e2e
    environment:
      MARIADB_ROOT_PASSWORD: "test_mariadb_password"
      MARIADB_DATABASE: "test_db"
    volumes:
      - mariadb_data_e2e:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ptest_mariadb_password"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: on-failure

  postgres-test-e2e:
    image: postgres:13
    container_name: postgres-test-e2e
    environment:
      POSTGRES_DB: "pg_test_db"
      POSTGRES_USER: "pguser"
      POSTGRES_PASSWORD: "test_postgres_password"
    volumes:
      - postgres_data_e2e:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pguser -d pg_test_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: on-failure

  sqlite-app-e2e:
    image: alpine:latest
    container_name: sqlite-app-e2e
    volumes:
      - sqlite_app_data_e2e:/app/data
    command: ["sh", "-c", "apk update && apk add --no-cache sqlite && tail -f /dev/null"]
    healthcheck:
      test: ["CMD", "sqlite3", "--version"]
      interval: 5s
      timeout: 5s
      retries: 5 # Allow more retries for apk install
      start_period: 20s # Increased start_period to give it ample time for apk install
    restart: on-failure

  enstow-e2e:
    build:
      context: ../ # Build from the parent directory where Dockerfile is
      dockerfile: Dockerfile
    container_name: enstow-e2e
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Allows agent to interact with other containers
      - ${PWD}/backups_e2e:/backups # E2E test-specific backup directory
      - ./e2e_config.yaml:/app/config.yaml:ro # E2E test-specific config
    environment:
      BACKUP_DIR: "/backups"
      CONFIG_FILE_PATH: "/app/config.yaml"
      CRON_SCHEDULE: "*/1 * * * *"
      TIMEZONE: "UTC"
    depends_on:
      mariadb-test-e2e:
        condition: service_healthy
      postgres-test-e2e:
        condition: service_healthy
      sqlite-app-e2e:
        condition: service_started
    restart: on-failure

  # Verification service for E2E tests
  verify-restore-service:
    build:
      context: ./ # Build from the current end_to_end directory
      dockerfile: Dockerfile.verify_restore
    container_name: verify-restore-e2e
    environment:
      MARIADB_PASSWORD: "test_mariadb_password"
      POSTGRES_PASSWORD: "test_postgres_password"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Allows verification script to exec into other containers
    depends_on:
      mariadb-test-e2e:
        condition: service_healthy
      postgres-test-e2e:
        condition: service_healthy
      sqlite-app-e2e:
        condition: service_healthy

volumes:
  mariadb_data_e2e:
  postgres_data_e2e:
  sqlite_app_data_e2e:
